/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.50
 * Generated at: 2022-06-28 08:57:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.home.maps;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/views/home/maps/../common/footer.jsp", Long.valueOf(1645939795641L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1655038649769L));
    _jspx_dependants.put("/WEB-INF/views/home/maps/../common/header.jsp", Long.valueOf(1656406589051L));
    _jspx_dependants.put("jar:file:/E:/eclipse_project/YiQingManageSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/YiQingManageSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("jar:file:/E:/eclipse_project/YiQingManageSystem/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/YiQingManageSystem/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153356282000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>社区疫情管理系统</title>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../resources/home/layui/css/layui.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../resources/home/css/global.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"fly-header layui-bg-black\">\r\n");
      out.write("    <div class=\"layui-container\">\r\n");
      out.write("        <a class=\"fly-logo\" href=\"../system/index\" style=\"top:12px;\">\r\n");
      out.write("            <h3 style=\"color:white; padding-top:8px;\">社区疫情管理系统</h3>          \r\n");
      out.write("        </a>\r\n");
      out.write("        <ul class=\"layui-nav fly-nav-user\">\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"fly-panel fly-column\">\r\n");
      out.write("    <div class=\"layui-container\">\r\n");
      out.write("        <ul class=\"layui-clear\">\r\n");
      out.write("            <li id=\"system\" class=\"layui-hide-xs\"><a href=\"../system/index\">首页</a></li>\r\n");
      out.write("            <li id=\"map\"><a href=\"../maps/index\">疫情地图</a></li>\r\n");
      out.write("            <li id=\"daily-report\"><a href=\"../daily-report/index\">日常打卡</a></li>\r\n");
      out.write("            <li id=\"good-apply\"><a href=\"../good-apply/index\">物资申请</a></li>\r\n");
      out.write("            <li id=\"map\"><a href=\"../maps/index\">全国疫情</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"fly-column-right layui-hide-xs\">\r\n");
      out.write("            <span class=\"fly-search\"><i class=\"layui-icon\"></i></span>\r\n");
      out.write("            <a href=\"../daily-report/index\" class=\"layui-btn\">日常打卡</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"../../resources/home/layui/jquery.min.1.8.2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    $(function () {\r\n");
      out.write("       var url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${url}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("       switch (url) {\r\n");
      out.write("            case \"system\":\r\n");
      out.write("                $(\"#system\").addClass(\"layui-this\");\r\n");
      out.write("                break;\r\n");
      out.write("            case \"map\":\r\n");
      out.write("                $(\"#map\").addClass(\"layui-this\");\r\n");
      out.write("                break;\r\n");
      out.write("           case \"clue\":\r\n");
      out.write("               $(\"#clue\").addClass(\"layui-this\");\r\n");
      out.write("               break;\r\n");
      out.write("           case \"daily-report\":\r\n");
      out.write("               $(\"#daily-report\").addClass(\"layui-this\");\r\n");
      out.write("               break;\r\n");
      out.write("           case \"good-apply\":\r\n");
      out.write("               $(\"#good-apply\").addClass(\"layui-this\");\r\n");
      out.write("               break;\r\n");
      out.write("       }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    function logout() {\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:'../user/logout',\r\n");
      out.write("            dataType:'json',\r\n");
      out.write("            type:'post',\r\n");
      out.write("            data:{},\r\n");
      out.write("            success:function(result){\r\n");
      out.write("                if(result.code === 0){\r\n");
      out.write("                    window.location.href = \"../system/index\";\r\n");
      out.write("                }else{\r\n");
      out.write("                    layer.alert(result.msg, {icon: 5});\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            error:function(){\r\n");
      out.write("                layer.alert(\"网络错误，退出登录失败！\", {icon: 5});\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"//api.map.baidu.com/api?v=2.0&ak=3tmfIS3gu3iSwpibAgXvIrvFx28mklvm\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"layui-container\">\r\n");
      out.write("    <div class=\"layui-row layui-col-space15\">\r\n");
      out.write("        <div class=\"layui-col-md8\">\r\n");
      out.write("            <div class=\"fly-panel\" style=\"margin-bottom: 0;\">\r\n");
      out.write("\r\n");
      out.write("                <div style=\"text-align: center; height: 770px;\">\r\n");
      out.write("                    <div style=\"display: inline-block;\">\r\n");
      out.write("                        <div id=\"r-result\">地点搜索:<input type=\"text\" id=\"suggestId\" size=\"20\" placeholder=\"请输入地点信息...\" style=\"width:250px;margin-top: 10px;margin-left:10px;padding: 0 20px;line-height: 36px;\" /></div>\r\n");
      out.write("                        <div id=\"searchResultPanel\" style=\"border:1px solid #C0C0C0;width:150px;height:auto; display:none;\"></div>\r\n");
      out.write("                        <div id=\"l-map\" style=\"width:700px; height:680px;margin-top: 10px;\"></div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"layui-col-md4\">\r\n");
      out.write("            <dl class=\"fly-panel fly-list-one\">\r\n");
      out.write("                <dt class=\"fly-panel-title\">热门新闻</dt>\r\n");
      out.write("                ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </dl>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"layui-col-md4\">\r\n");
      out.write("            <dl class=\"fly-panel fly-list-one\">\r\n");
      out.write("                <img src=\"../../resources/home/images/1.png\" style=\"width: 380px; height:220px;\">\r\n");
      out.write("            </dl>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"fly-footer\">\r\n");
      out.write("    <p> 2021-2022 &copy; 社区疫情管理系统</p>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"../../resources/home/layui/jquery.min.1.8.2.js\"></script>\r\n");
      out.write("<script src=\"../../resources/home/layui/layui.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    layui.cache.page = '';\r\n");
      out.write("    layui.cache.user = {\r\n");
      out.write("        username: '游客'\r\n");
      out.write("        ,uid: -1\r\n");
      out.write("        ,avatar: '../../resources/blog/images/avatar/00.jpg'\r\n");
      out.write("        ,experience: 83\r\n");
      out.write("        ,sex: '男'\r\n");
      out.write("    };\r\n");
      out.write("    layui.config({\r\n");
      out.write("        version: \"3.0.0\"\r\n");
      out.write("        ,base: '../../resources/home/mods/'\r\n");
      out.write("    }).extend({\r\n");
      out.write("        fly: 'index'\r\n");
      out.write("    }).use('fly');\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    // 百度地图API功能\r\n");
      out.write("    function G(id) {\r\n");
      out.write("        return document.getElementById(id);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    var id;\r\n");
      out.write("    $(function() {\r\n");
      out.write("        layui.use('layer', function(){\r\n");
      out.write("            id = layui.layer.msg('正在获取疫情地图信息...请稍后....', {\r\n");
      out.write("                shade: 0.4,\r\n");
      out.write("                time:false //取消自动关闭\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("        // 获取当前位置\r\n");
      out.write("        getNowLocation();\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    var infectiveAddress = [];\r\n");
      out.write("    function markInfectiveLocation(map) {\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("        for(let i=0; i<infectiveAddress.length; i++) {\r\n");
      out.write("            let marker = new BMap.Marker(new BMap.Point(parseFloat(infectiveAddress[i].lng), parseFloat(infectiveAddress[i].lat)), {});\r\n");
      out.write("            map.addOverlay(marker);\r\n");
      out.write("            var opts = {\r\n");
      out.write("                width : 70,     // 信息窗口宽度\r\n");
      out.write("                height: 100,     // 信息窗口高度\r\n");
      out.write("                title : \"疫情情况\" , // 信息窗口标题\r\n");
      out.write("            };\r\n");
      out.write("            let infoWindow = new BMap.InfoWindow('<span style=\"color:red\">疫情位置：'+ infectiveAddress[i].location +'<br/>确诊人数：' + infectiveAddress[i].count + '<br/>登记时间：'+ format(infectiveAddress[i].createTime) +'</span>', opts);  // 创建信息窗口对象\r\n");
      out.write("            marker.addEventListener(\"click\", function(){\r\n");
      out.write("                map.openInfoWindow(infoWindow, new BMap.Point(parseFloat(infectiveAddress[i].lng), parseFloat(infectiveAddress[i].lat))); //开启信息窗口\r\n");
      out.write("            });\r\n");
      out.write("            map.openInfoWindow(infoWindow, new BMap.Point(parseFloat(infectiveAddress[i].lng), parseFloat(infectiveAddress[i].lat))); //开启信息窗口\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function markNowLocation(map, lng, lat, address) {\r\n");
      out.write("        var marker = new BMap.Marker(new BMap.Point(lng, lat), {});\r\n");
      out.write("        map.addOverlay(marker);\r\n");
      out.write("\r\n");
      out.write("        var opts = {\r\n");
      out.write("            width : 70,     // 信息窗口宽度\r\n");
      out.write("            height: 30,     // 信息窗口高度\r\n");
      out.write("            title : \"当前位置\" , // 信息窗口标题\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        var infoWindow = new BMap.InfoWindow('地址：' + address, opts);  // 创建信息窗口对象\r\n");
      out.write("        marker.addEventListener(\"click\", function(){\r\n");
      out.write("            map.openInfoWindow(infoWindow, new BMap.Point(lng, lat)); //开启信息窗口\r\n");
      out.write("        });\r\n");
      out.write("        map.openInfoWindow(infoWindow, new BMap.Point(lng, lat)); //开启信息窗口\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    var pp = null;\r\n");
      out.write("\r\n");
      out.write("    function searchKeyWordNote(map) {\r\n");
      out.write("        var ac = new BMap.Autocomplete(    //建立一个自动完成的对象\r\n");
      out.write("            {\"input\" : \"suggestId\"\r\n");
      out.write("                ,\"location\" : map\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("        ac.addEventListener(\"onhighlight\", function(e) {  //鼠标放在下拉列表上的事件\r\n");
      out.write("            var str = \"\";\r\n");
      out.write("            var _value = e.fromitem.value;\r\n");
      out.write("            var value = \"\";\r\n");
      out.write("            if (e.fromitem.index > -1) {\r\n");
      out.write("                value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\r\n");
      out.write("            }\r\n");
      out.write("            str = \"FromItem<br />index = \" + e.fromitem.index + \"<br />value = \" + value;\r\n");
      out.write("\r\n");
      out.write("            value = \"\";\r\n");
      out.write("            if (e.toitem.index > -1) {\r\n");
      out.write("                _value = e.toitem.value;\r\n");
      out.write("                value = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\r\n");
      out.write("            }\r\n");
      out.write("            str += \"<br />ToItem<br />index = \" + e.toitem.index + \"<br />value = \" + value;\r\n");
      out.write("            G(\"searchResultPanel\").innerHTML = str;\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        var myValue;\r\n");
      out.write("        ac.addEventListener(\"onconfirm\", function(e) {    //鼠标点击下拉列表后的事件\r\n");
      out.write("            var _value = e.item.value;\r\n");
      out.write("            myValue = _value.province +  _value.city +  _value.district +  _value.street +  _value.business;\r\n");
      out.write("            G(\"searchResultPanel\").innerHTML =\"onconfirm<br />index = \" + e.item.index + \"<br />myValue = \" + myValue;\r\n");
      out.write("            if(pp != null){\r\n");
      out.write("                deletePointMarker(map);\r\n");
      out.write("            }\r\n");
      out.write("            setPlace(map, myValue);\r\n");
      out.write("        });\r\n");
      out.write("        layer.close(id);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function initMap(lng, lat, address) {\r\n");
      out.write("        var map = new BMap.Map(\"l-map\");\r\n");
      out.write("        map.centerAndZoom(new BMap.Point(lng, lat), 20);                   // 初始化地图,设置城市和地图级别。\r\n");
      out.write("        map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放\r\n");
      out.write("        markInfectiveLocation(map);\r\n");
      out.write("        markNowLocation(map, lng, lat, address);\r\n");
      out.write("        searchKeyWordNote(map);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function setPlace(map, myValue){\r\n");
      out.write("        // map.clearOverlays();    //清除地图上所有覆盖物\r\n");
      out.write("        function myFun(){\r\n");
      out.write("            pp = local.getResults().getPoi(0).point;    //获取第一个智能搜索的结果\r\n");
      out.write("            map.centerAndZoom(pp, 20);\r\n");
      out.write("            let flag = false; // 判断是否该点已经在图上标注过了\r\n");
      out.write("            for(let i=0; i<infectiveAddress.length; i++) {\r\n");
      out.write("                if(pp.lng.toFixed(5) === Number(infectiveAddress[i].lng).toFixed(5) && pp.lat.toFixed(5) === Number(infectiveAddress[i].lat).toFixed(5)) {\r\n");
      out.write("                    flag = true;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            if(!flag){\r\n");
      out.write("                map.addOverlay(new BMap.Marker(pp));    //添加标注\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        var local = new BMap.LocalSearch(map, { //智能搜索\r\n");
      out.write("            onSearchComplete: myFun\r\n");
      out.write("        });\r\n");
      out.write("        local.search(myValue);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function deletePointMarker(map) {\r\n");
      out.write("        if(pp == null) {\r\n");
      out.write("           return false;\r\n");
      out.write("        }\r\n");
      out.write("        var allOverlay = map.getOverlays();\r\n");
      out.write("        for(var i = 0;i<allOverlay.length;i++) {\r\n");
      out.write("            if(allOverlay[i].getPosition() == null) {\r\n");
      out.write("                continue;\r\n");
      out.write("            }\r\n");
      out.write("            if (allOverlay[i].getPosition().lng === pp.lng && allOverlay[i].getPosition().lat === pp.lat) {\r\n");
      out.write("                map.removeOverlay(allOverlay[i]);\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function getNowLocation() {\r\n");
      out.write("        if (navigator.geolocation) {\r\n");
      out.write("            navigator.geolocation.getCurrentPosition(locationSuccess, locationError, {\r\n");
      out.write("                // 指示浏览器获取高精度的位置，默认为false\r\n");
      out.write("                enableHighAccuracy: true,\r\n");
      out.write("                // 指定获取地理位置的超时时间，默认不限时，单位为毫秒\r\n");
      out.write("                timeout: 5000,\r\n");
      out.write("                // 最长有效期，在重复获取地理位置时，此参数指定多久再次获取位置。\r\n");
      out.write("                maximumAge: 3000\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("        }else{\r\n");
      out.write("            alert(\"浏览器不支持Html5来获取地理位置信息\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function locationSuccess(position) {\r\n");
      out.write("        let lat = position.coords.latitude;\r\n");
      out.write("        let lng = position.coords.longitude;\r\n");
      out.write("        const pointBak = new BMap.Point(lng, lat);\r\n");
      out.write("        const convertor = new BMap.Convertor();\r\n");
      out.write("        convertor.translate([pointBak], 1, 5,function(resPoint) {\r\n");
      out.write("            if(resPoint && resPoint.points && resPoint.points.length>0){\r\n");
      out.write("                lng = resPoint.points[0].lng;\r\n");
      out.write("                lat = resPoint.points[0].lat;\r\n");
      out.write("            }\r\n");
      out.write("            console.log(\"当前位置经度为:\" + lng + \"纬度为:\" +lat);\r\n");
      out.write("            const point = new BMap.Point(lng, lat);\r\n");
      out.write("            const geo = new BMap.Geocoder();\r\n");
      out.write("            geo.getLocation(point, (rs) => {\r\n");
      out.write("                var addComp = rs.addressComponents;\r\n");
      out.write("                console.log(addComp);\r\n");
      out.write("                var result = addComp.province + addComp.city + addComp.district + addComp.street + addComp.streetNumber;\r\n");
      out.write("                console.log(\"当前的位置为:\" + result);\r\n");
      out.write("                initMap(lng, lat, result);\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    function locationError(error) {\r\n");
      out.write("        switch(error.code) {\r\n");
      out.write("            case error.TIMEOUT:\r\n");
      out.write("                alert(\"连接超时，请重试\");\r\n");
      out.write("                break;\r\n");
      out.write("            case error.POSITION_UNAVAILABLE:\r\n");
      out.write("                alert('非常抱歉，我们暂时无法为您所在的星球提供位置服务');\r\n");
      out.write("                break;\r\n");
      out.write("            case error.PERMISSION_DENIED:\r\n");
      out.write("                alert('您拒绝了使用位置共享服务，查询已取消');\r\n");
      out.write("                break;\r\n");
      out.write("            default:\r\n");
      out.write("                alert('发生未知错误!');\r\n");
      out.write("                break;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //时间格式显示\r\n");
      out.write("    function add0(m){return m<10?'0'+m:m }\r\n");
      out.write("    function format(shijianchuo){\r\n");
      out.write("        //shijianchuo是整数，否则要parseInt转换\r\n");
      out.write("        var time = new Date(shijianchuo);\r\n");
      out.write("        time.setHours(time.getHours() - 14);\r\n");
      out.write("        var y = time.getFullYear();\r\n");
      out.write("        var m = time.getMonth()+1;\r\n");
      out.write("        var d = time.getDate();\r\n");
      out.write("        var h = time.getHours();\r\n");
      out.write("        var mm = time.getMinutes();\r\n");
      out.write("        var s = time.getSeconds();\r\n");
      out.write("        return y+'-'+add0(m)+'-'+add0(d)+' '+add0(h)+':'+add0(mm)+':'+add0(s);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    /*.BMap_bubble_content {*/\r\n");
      out.write("    /*    left: 0px;*/\r\n");
      out.write("    /*}*/\r\n");
      out.write("    /*.BMap_bubble_title {*/\r\n");
      out.write("    /*    padding-left: 0px;*/\r\n");
      out.write("    /*}*/\r\n");
      out.write("    /*.BMap_bubble_buttons {*/\r\n");
      out.write("    /*    right: -20px !important;*/\r\n");
      out.write("    /*}*/\r\n");
      out.write("    .BMap_cpyCtrl {\r\n");
      out.write("        display: none;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/home/maps/../common/header.jsp(18,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${HOME_USER != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                <li class=\"layui-nav-item\">\r\n");
          out.write("                    <a class=\"fly-nav-avatar\" href=\"../user/center\">\r\n");
          out.write("                        <cite class=\"layui-hide-xs\">欢迎您，");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${HOME_USER.username}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</cite>\r\n");
          out.write("                        <img src=\"../../common/file/view_photo?filename=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${HOME_USER.headPic}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("                    </a>\r\n");
          out.write("                    <dl class=\"layui-nav-child\">\r\n");
          out.write("                        <dd><a href=\"../user/center\"><i class=\"layui-icon\">&#xe68e;</i>用户中心</a></dd>\r\n");
          out.write("                        <hr style=\"margin: 5px 0;\">\r\n");
          out.write("                        <dd><a href=\"javascript:void(0);\" onclick=\"logout()\" style=\"text-align: center;\">退出</a></dd>\r\n");
          out.write("                    </dl>\r\n");
          out.write("                </li>\r\n");
          out.write("                <li class=\"layui-nav-item\" style=\"padding-left: 30px;\">\r\n");
          out.write("                    <a href=\"../../admin/user/login\">后台</a>\r\n");
          out.write("                </li>\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/home/maps/../common/header.jsp(34,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${HOME_USER == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                <li class=\"layui-nav-item\">\r\n");
          out.write("                    <a href=\"../system/login\">登录</a>\r\n");
          out.write("                </li>\r\n");
          out.write("                <li class=\"layui-nav-item\">\r\n");
          out.write("                    <a href=\"../system/register\">注册</a>\r\n");
          out.write("                </li>\r\n");
          out.write("                <li class=\"layui-nav-item\">\r\n");
          out.write("                    <a class=\"fly-nav-avatar\" href=\"javascript:void(0);\">\r\n");
          out.write("                        <cite class=\"layui-hide-xs\"></cite>\r\n");
          out.write("                        <img src=\"../../common/file/view_photo?filename=../resources/upload/common/no_image.jpg\">\r\n");
          out.write("                    </a>\r\n");
          out.write("                </li>\r\n");
          out.write("                <li class=\"layui-nav-item\" style=\"padding-left: 30px;\">\r\n");
          out.write("                    <a href=\"../../admin/user/login\">后台</a>\r\n");
          out.write("                </li>\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/home/maps/index.jsp(31,16) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/home/maps/index.jsp(31,16) '${hotNewsList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${hotNewsList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/home/maps/index.jsp(31,16) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("hotNews");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                    <dd>\r\n");
            out.write("                        <a href=\"../news/detail?id=");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hotNews.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" title=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hotNews.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" style=\"max-width: 75%\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hotNews.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a>\r\n");
            out.write("                        <span><i class=\"iconfont\" title=\"浏览量\">&#xe60b;</i>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hotNews.viewNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("                        <span><i class=\"iconfont icon-pinglun1\"></i> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hotNews.commentNum}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("                    </dd>\r\n");
            out.write("                ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent(null);
      // /WEB-INF/views/home/maps/index.jsp(70,8) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/home/maps/index.jsp(70,8) '${mapsList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${mapsList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/home/maps/index.jsp(70,8) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("maps");
      // /WEB-INF/views/home/maps/index.jsp(70,8) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("            var maps = {\r\n");
            out.write("                lng: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps.lng}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("                lat: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps.lat}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("                createTime: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps.createTime}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("                location: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps.location}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("                count: \"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maps.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\",\r\n");
            out.write("            };\r\n");
            out.write("            infectiveAddress.push(maps);\r\n");
            out.write("        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
